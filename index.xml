<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello Friend</title>
    
    
    
    <link>/</link>
    <description>Recent content on Hello Friend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Jul 2022 00:11:00 -0700</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sysprep</title>
      <link>/posts/new_post_20220723/</link>
      <pubDate>Sat, 23 Jul 2022 00:11:00 -0700</pubDate>
      
      <guid>/posts/new_post_20220723/</guid>
      <description>
        
          
          
          
        
        
        
          Original : MS Docs Sysprep (Generalize) a Windows installation
因為習慣在VM上工作總會建立一些系統樣板如果透過樣本產生新Windows Server就可能產生SID衝突這時就要透過Sysprep 重置System SID
whoami /user 重置安全識別碼(SID) #generalize, oobe C:\Windows\System32\Sysprep\sysprep.exe 再看一次SID就會改變 whoami /user 
          
        
        </description>
    </item>
    
    <item>
      <title>RH124 </title>
      <link>/posts/new_post_20220701/</link>
      <pubDate>Fri, 01 Jul 2022 05:19:40 -0700</pubDate>
      
      <guid>/posts/new_post_20220701/</guid>
      <description>
        
          
          
          
        
        
        
          
          
        
        </description>
    </item>
    
    <item>
      <title>Ansible Web API</title>
      <link>/posts/new_post_20220626/</link>
      <pubDate>Sat, 25 Jun 2022 20:12:07 -0700</pubDate>
      
      <guid>/posts/new_post_20220626/</guid>
      <description>
        
          
          
          
        
        
        
          Original author: Rikesh 寫個小玩具讀取從Ansible Web讀取資料, 可以拿來當RHCE練習雖然不像CCIE稀有，薪水也比不上當紅的CKAD但是過個小日子還行
#!/usr/bin/python3 import requests import json class Auto_ops: # attribute api_token = &amp;quot;&amp;quot; original_url = &amp;quot;http://localhost:10445&amp;quot; headers = { &#39;Content-type&#39;: &#39;application/json&#39;, &#39;Accept&#39;: &#39;application/json&#39;, &amp;quot;Authorization&amp;quot;: api_token } id_project = &amp;quot;&amp;quot; # Constructor def __init__(self, original_url): self.api_token = self.set_conf() self.original_url = original_url def set_conf(self): # Opening JSON file file = open(&#39;configmap.json&#39;) # returns JSON object as a dictionary data = json.load(file) api_token = &amp;quot;Bearer&amp;quot; + &amp;quot; &amp;quot; + data[&amp;quot;token&amp;quot;] self.
          
        
        </description>
    </item>
    
    <item>
      <title>客製化個人專頁</title>
      <link>/posts/new_post_20220625/</link>
      <pubDate>Sat, 25 Jun 2022 05:47:27 -0700</pubDate>
      
      <guid>/posts/new_post_20220625/</guid>
      <description>
        
          
          
          
        
        
        
          今天花了一下午終於把個人專頁做好，紀錄一下過程下次就不用查半天文件
#新增一個新頁面 hugo new about/index.html  然後在content/about/index.html插入{{ about-me }}並在themes/hello-friend/layouts/shortcodes底下創建about-me.html然後就可以在裡面編輯屬於自己的介紹頁面,相關CSS與JS檔則放在asset底下
          
        
        </description>
    </item>
    
    <item>
      <title>Linux無密碼登入</title>
      <link>/posts/new_post_20220611/</link>
      <pubDate>Sat, 11 Jun 2022 07:50:35 -0700</pubDate>
      
      <guid>/posts/new_post_20220611/</guid>
      <description>
        
          
          
          
        
        
        
          最近發生一個很搞笑的事，只是因為AWS無法使用只好在本地做實驗竟然花了一下午才修好Linux無密碼登入,於是寫個草稿紀錄一下
首先透過ssh-keygen生成密鑰並使用安靜模式，自動化必備 cat /dev/zero | ssh-keygen -q -N &amp;quot;&amp;quot; 將公鑰加到authorized_keys cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys 如果是使用ssh-copy-id生成的authorized_keys會自動設為600，而自行創建的file記得要改權限，不然會無法登入而且error log就只顯示登入失敗這要怎debug??? chmod 600 ~/.ssh/authorized_keys 接著要修改sshd_config，可以透過vi或sed sudo vi /etc/ssh/sshd_config PermitRootLogin yes PubkeyAuthentication yes sudo sed -i s/#PubkeyAuthentication.*/PubkeyAuthentication\ yes/ /etc/ssh/sshd_config sudo sed -i s/#PermitRootLogin.*/PermitRootLogin\ yes/ /etc/ssh/sshd_config 接著重啟sshd服務 sudo systemctl restart sshd 最後測試一下 ssh $USER@127.0.0.1 
          
        
        </description>
    </item>
    
    <item>
      <title></title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>
        
          
          
          
        
        
        
            Student_3R 小工程師一枚平常讀讀原文文件寫寫心得，電腦科學的英文算是簡單的計算機概念也放諸四海皆準。
   Skill   Linux Python Container ecosystem         
          
        
        </description>
    </item>
    
  </channel>
</rss>